/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loto;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.JButton;

/**
 *
 * @author mae
 */
public class Loto extends javax.swing.JFrame {

    private static JButton[] lesBoutons = new JButton[50];
    private static int[] tabJoueur = new int[6];
    private static int[] tabOrdi = new int[6];

    /**
     * Creates new form Loto
     */
    public Loto() {
        initComponents();
        jouerButton.setEnabled(false);
        // Les variables horiz et vert permettent de positionner les boutons
// c'est le point de départ du premier bouton
        int Horiz, Vert;
        Horiz = 60;
        Vert = 100;
// On crée les 50 boutons
        for (int i = 1; i < 50; i++) {
// Création du bouton
            if (i % 10 == 0) {
                Vert = Vert + 60; //on gère le cas où on arrive en fin de ligne 
                Horiz = 0;
            }
            lesBoutons[i] = new JButton();
// Emplacement
            lesBoutons[i].setLocation(Horiz, Vert);
// Taille
            lesBoutons[i].setSize(50, 50);
// Numéro
            lesBoutons[i].setText(String.valueOf(i));
// ajout de l'action en cas de pression
            lesBoutons[i].addActionListener(new MyActionListener());
// on ajoute les chiffres au panel
            mainPanel.add(lesBoutons[i]);
            Horiz = Horiz + 60;
            mainPanel.repaint();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        choixJoueur = new javax.swing.JLabel();
        jouerButton = new javax.swing.JButton();
        effacerButton = new javax.swing.JButton();
        choixOrdi = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        gainButton = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        result = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jouerButton.setText("Jouer");
        jouerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jouerButtonMouseClicked(evt);
            }
        });
        jouerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jouerButtonActionPerformed(evt);
            }
        });

        effacerButton.setText("Effacer");
        effacerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                effacerButtonMouseClicked(evt);
            }
        });
        effacerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                effacerButtonActionPerformed(evt);
            }
        });

        gainButton.setText("gain désiré");
        gainButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gainButtonMouseClicked(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(choixJoueur, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choixOrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jouerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(effacerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(gainButton)
                .addGap(18, 18, 18)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jouerButton)
                            .addComponent(choixOrdi, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(effacerButton)
                            .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(choixJoueur, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gainButton)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(result, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jouerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jouerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jouerButtonActionPerformed

    private void effacerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_effacerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_effacerButtonActionPerformed

    private void jouerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jouerButtonMouseClicked
        // TODO add your handling code here:
        Random ra = new Random();
        boolean doublon;
        int ajoutTab=ra.nextInt(48)+1;
        tabOrdi[0]=ajoutTab;
        
        for (int i=1; i < 6; i++) {
            
            doublon=true;
            while (doublon) {
                Random re=new Random();
                ajoutTab = re.nextInt(48)+1;
                doublon = false;
                for (int j=0; j<i; j++) {
                    if (tabOrdi[j] == ajoutTab) {
                        doublon = true;
                    }
                }
            }
            tabOrdi[i]=ajoutTab;

        }
        String repString=""; 
       
        
        for(int k=0;k<6;k++){
            repString=repString+String.valueOf(tabOrdi[k])+" ";
        }
      
        
        choixOrdi.setText(repString);
        int compteur=0;
        for(int l=0;l<6;l++ ){
            for(int m=0;m<6;m++){
                if(tabJoueur[l]==tabOrdi[m]){
                    compteur++;
                }
            }
            
        }
        score.setText("Score: "+compteur+" chiffres corrects test test ");
    }//GEN-LAST:event_jouerButtonMouseClicked

    private void effacerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_effacerButtonMouseClicked
        // TODO add your handling code here:
        for (int i = 1; i < 50; i++) {
            lesBoutons[i].setEnabled(true);
        }
        jouerButton.setEnabled(false);
        choixJoueur.setText("");
        choixOrdi.setText("");
        score.setText("");
        result.setText("");
        jSpinner1.setValue(1);
        for (int j = 0; j < 6; j++) {
            tabJoueur[j] = 0;
        }
        
    }//GEN-LAST:event_effacerButtonMouseClicked

    private void gainButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gainButtonMouseClicked
        // TODO add your handling code here:
        int resultat=0;
        int compteur=0;
        while(resultat!=Integer.parseInt(String.valueOf(jSpinner1.getValue()))){
         Random ra = new Random();
        boolean doublon;
        int ajoutTab=ra.nextInt(48)+1;
        tabOrdi[0]=ajoutTab;
        
        for (int i=1; i < 6; i++) {
            
            doublon=true;
            while (doublon) {
                Random re=new Random();
                ajoutTab = re.nextInt(48)+1;
                doublon = false;
                for (int j=0; j<i; j++) {
                    if (tabOrdi[j] == ajoutTab) {
                        doublon = true;
                    }
                }
            }
            tabOrdi[i]=ajoutTab;

        }
     
        resultat=0;
        for(int l=0;l<6;l++ ){
            for(int m=0;m<6;m++){
                if(tabJoueur[l]==tabOrdi[m]){
                    resultat++;
                }
            }
            
        }
       compteur++;
    } 
        String repString=""; 
       
        
        for(int k=0;k<6;k++){
            repString=repString+String.valueOf(tabOrdi[k])+" ";
        }
        
        choixOrdi.setText(repString);
        score.setText("Score: "+resultat+" chiffres corrects");
       result.setText("il a fallu "+compteur+ " tentatives");                            
        
    }//GEN-LAST:event_gainButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loto().setVisible(true);
            }
        });
    }

    private class MyActionListener implements ActionListener {

        public void actionPerformed(ActionEvent e) {

            if (tabJoueur[5] == 0) {
                JButton courant = (JButton) e.getSource();
                System.out.println("Enabled " + courant.getText());
                courant.setEnabled(false);
                boolean trouve = false;
                int i = 0;
                while (!trouve) {
                    if (tabJoueur[i] == 0) {
                        trouve = true;
                        tabJoueur[i] = Integer.parseInt(courant.getText());
                        choixJoueur.setText(choixJoueur.getText() + " " + courant.getText());
                    }
                    i++;
                }
                if (tabJoueur[5] != 0) {
                    for (int j = 1; j < 50; j++) {
                        lesBoutons[j].setEnabled(false);
                        jouerButton.setEnabled(true);
                    }
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel choixJoueur;
    private javax.swing.JLabel choixOrdi;
    private javax.swing.JButton effacerButton;
    private javax.swing.JButton gainButton;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton jouerButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel result;
    private javax.swing.JLabel score;
    // End of variables declaration//GEN-END:variables
}
